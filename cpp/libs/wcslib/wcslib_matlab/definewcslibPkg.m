function libDef = definewcslibPkg()
%% DEFINEWCSLIBPKG About definewcslibPkg.mlx
% This file defines the MATLAB interface to the library |wcslibPkg|.
% 
% Commented sections represent C++ functionality that MATLAB cannot automatically 
% define. To include functionality, uncomment a section and provide values for 
% <SHAPE>, <DIRECTION>, etc. For more information, see <matlab:helpview(fullfile(docroot,'matlab','helptargets.map'),'cpp_define_interface') 
% Define MATLAB Interface for C++ Library>.
%% Setup. Do not edit this section.
libDef = clibgen.LibraryDefinition("wcslibPkgData.xml");
%% OutputFolder and Libraries
libDef.OutputFolder = "D:\Ultrasat\wcs\wcslib\wcs_matlab";
libDef.Libraries = "D:\Ultrasat\wcs\wcslib\wcs_matlab\cfitsio.lib";
%% C++ function |wcsInit| with MATLAB name |clib.wcslibPkg.wcsInit|
% C++ Signature: bool wcsInit()
wcsInitDefinition = addFunction(libDef, ...
    "bool wcsInit()", ...
    "MATLABName", "clib.wcslibPkg.wcsInit", ...
    "Description", "clib.wcslibPkg.wcsInit    Representation of C++ function wcsInit."); % Modify help description values as needed.
defineOutput(wcsInitDefinition, "RetVal", "logical");
validate(wcsInitDefinition);
%% C++ function |wcsReadFits| with MATLAB name |clib.wcslibPkg.wcsReadFits|
% C++ Signature: bool wcsReadFits(char const * fname)
wcsReadFitsDefinition = addFunction(libDef, ...
    "bool wcsReadFits(char const * fname)", ...
    "MATLABName", "clib.wcslibPkg.wcsReadFits", ...
    "Description", "clib.wcslibPkg.wcsReadFits    Representation of C++ function wcsReadFits."); % Modify help description values as needed.
defineArgument(wcsReadFitsDefinition, "fname", "string", "input", "nullTerminated");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Char,int8,string, or char
defineOutput(wcsReadFitsDefinition, "RetVal", "logical");
validate(wcsReadFitsDefinition);
%% C++ function |wcsReadHeader| with MATLAB name |clib.wcslibPkg.wcsReadHeader|
% C++ Signature: bool wcsReadHeader(char const * fname)
wcsReadHeaderDefinition = addFunction(libDef, ...
    "bool wcsReadHeader(char const * fname)", ...
    "MATLABName", "clib.wcslibPkg.wcsReadHeader", ...
    "Description", "clib.wcslibPkg.wcsReadHeader    Representation of C++ function wcsReadHeader."); % Modify help description values as needed.
defineArgument(wcsReadHeaderDefinition, "fname", "string", "input", "nullTerminated");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Char,int8,string, or char
defineOutput(wcsReadHeaderDefinition, "RetVal", "logical");
validate(wcsReadHeaderDefinition);
%% C++ function |wcsPixToSky| with MATLAB name |clib.wcslibPkg.wcsPixToSky|
% C++ Signature: void wcsPixToSky(double * x,double * y,size_t len)
wcsPixToSkyDefinition = addFunction(libDef, ...
    "void wcsPixToSky(double * x,double * y,size_t len)", ...
    "MATLABName", "clib.wcslibPkg.wcsPixToSky", ...
    "Description", "clib.wcslibPkg.wcsPixToSky    Representation of C++ function wcsPixToSky."); % Modify help description values as needed.
defineArgument(wcsPixToSkyDefinition, "x", "double", "input", "len");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Double, or double
defineArgument(wcsPixToSkyDefinition, "y", "double", "input", "len");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Double, or double
defineArgument(wcsPixToSkyDefinition, "len", "uint64");
validate(wcsPixToSkyDefinition);
%% C++ function |wcsSkyToPix| with MATLAB name |clib.wcslibPkg.wcsSkyToPix|
% C++ Signature: void wcsSkyToPix(double * x,double * y,size_t len)
wcsSkyToPixDefinition = addFunction(libDef, ...
    "void wcsSkyToPix(double * x,double * y,size_t len)", ...
    "MATLABName", "clib.wcslibPkg.wcsSkyToPix", ...
    "Description", "clib.wcslibPkg.wcsSkyToPix    Representation of C++ function wcsSkyToPix."); % Modify help description values as needed.
defineArgument(wcsSkyToPixDefinition, "x", "double", "input", "len");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Double, or double
defineArgument(wcsSkyToPixDefinition, "y", "double", "input", "len");  % @Fixed -  '<MLTYPE>' can be clib.array.wcslibPkg.Double, or double
defineArgument(wcsSkyToPixDefinition, "len", "uint64");
validate(wcsSkyToPixDefinition);
%% C++ function |wcsGetProp_flag| with MATLAB name |clib.wcslibPkg.wcsGetProp_flag|
% C++ Signature: int wcsGetProp_flag()
wcsGetProp_flagDefinition = addFunction(libDef, ...
    "int wcsGetProp_flag()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_flag", ...
    "Description", "clib.wcslibPkg.wcsGetProp_flag    Representation of C++ function wcsGetProp_flag."); % Modify help description values as needed.
defineOutput(wcsGetProp_flagDefinition, "RetVal", "int32");
validate(wcsGetProp_flagDefinition);
%% C++ function |wcsSetProp_flag| with MATLAB name |clib.wcslibPkg.wcsSetProp_flag|
% C++ Signature: bool wcsSetProp_flag(int value)
wcsSetProp_flagDefinition = addFunction(libDef, ...
    "bool wcsSetProp_flag(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_flag", ...
    "Description", "clib.wcslibPkg.wcsSetProp_flag    Representation of C++ function wcsSetProp_flag."); % Modify help description values as needed.
defineArgument(wcsSetProp_flagDefinition, "value", "int32");
defineOutput(wcsSetProp_flagDefinition, "RetVal", "logical");
validate(wcsSetProp_flagDefinition);
%% C++ function |wcsGetProp_naxis| with MATLAB name |clib.wcslibPkg.wcsGetProp_naxis|
% C++ Signature: int wcsGetProp_naxis()
wcsGetProp_naxisDefinition = addFunction(libDef, ...
    "int wcsGetProp_naxis()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_naxis", ...
    "Description", "clib.wcslibPkg.wcsGetProp_naxis    Representation of C++ function wcsGetProp_naxis."); % Modify help description values as needed.
defineOutput(wcsGetProp_naxisDefinition, "RetVal", "int32");
validate(wcsGetProp_naxisDefinition);
%% C++ function |wcsSetProp_naxis| with MATLAB name |clib.wcslibPkg.wcsSetProp_naxis|
% C++ Signature: bool wcsSetProp_naxis(int value)
wcsSetProp_naxisDefinition = addFunction(libDef, ...
    "bool wcsSetProp_naxis(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_naxis", ...
    "Description", "clib.wcslibPkg.wcsSetProp_naxis    Representation of C++ function wcsSetProp_naxis."); % Modify help description values as needed.
defineArgument(wcsSetProp_naxisDefinition, "value", "int32");
defineOutput(wcsSetProp_naxisDefinition, "RetVal", "logical");
validate(wcsSetProp_naxisDefinition);
%% C++ function |wcsGetProp_lonpole| with MATLAB name |clib.wcslibPkg.wcsGetProp_lonpole|
% C++ Signature: double wcsGetProp_lonpole()
wcsGetProp_lonpoleDefinition = addFunction(libDef, ...
    "double wcsGetProp_lonpole()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_lonpole", ...
    "Description", "clib.wcslibPkg.wcsGetProp_lonpole    Representation of C++ function wcsGetProp_lonpole."); % Modify help description values as needed.
defineOutput(wcsGetProp_lonpoleDefinition, "RetVal", "double");
validate(wcsGetProp_lonpoleDefinition);
%% C++ function |wcsSetProp_lonpole| with MATLAB name |clib.wcslibPkg.wcsSetProp_lonpole|
% C++ Signature: bool wcsSetProp_lonpole(double value)
wcsSetProp_lonpoleDefinition = addFunction(libDef, ...
    "bool wcsSetProp_lonpole(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_lonpole", ...
    "Description", "clib.wcslibPkg.wcsSetProp_lonpole    Representation of C++ function wcsSetProp_lonpole."); % Modify help description values as needed.
defineArgument(wcsSetProp_lonpoleDefinition, "value", "double");
defineOutput(wcsSetProp_lonpoleDefinition, "RetVal", "logical");
validate(wcsSetProp_lonpoleDefinition);
%% C++ function |wcsGetProp_latpole| with MATLAB name |clib.wcslibPkg.wcsGetProp_latpole|
% C++ Signature: double wcsGetProp_latpole()
wcsGetProp_latpoleDefinition = addFunction(libDef, ...
    "double wcsGetProp_latpole()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_latpole", ...
    "Description", "clib.wcslibPkg.wcsGetProp_latpole    Representation of C++ function wcsGetProp_latpole."); % Modify help description values as needed.
defineOutput(wcsGetProp_latpoleDefinition, "RetVal", "double");
validate(wcsGetProp_latpoleDefinition);
%% C++ function |wcsSetProp_latpole| with MATLAB name |clib.wcslibPkg.wcsSetProp_latpole|
% C++ Signature: bool wcsSetProp_latpole(double value)
wcsSetProp_latpoleDefinition = addFunction(libDef, ...
    "bool wcsSetProp_latpole(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_latpole", ...
    "Description", "clib.wcslibPkg.wcsSetProp_latpole    Representation of C++ function wcsSetProp_latpole."); % Modify help description values as needed.
defineArgument(wcsSetProp_latpoleDefinition, "value", "double");
defineOutput(wcsSetProp_latpoleDefinition, "RetVal", "logical");
validate(wcsSetProp_latpoleDefinition);
%% C++ function |wcsGetProp_restfrq| with MATLAB name |clib.wcslibPkg.wcsGetProp_restfrq|
% C++ Signature: double wcsGetProp_restfrq()
wcsGetProp_restfrqDefinition = addFunction(libDef, ...
    "double wcsGetProp_restfrq()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_restfrq", ...
    "Description", "clib.wcslibPkg.wcsGetProp_restfrq    Representation of C++ function wcsGetProp_restfrq."); % Modify help description values as needed.
defineOutput(wcsGetProp_restfrqDefinition, "RetVal", "double");
validate(wcsGetProp_restfrqDefinition);
%% C++ function |wcsSetProp_restfrq| with MATLAB name |clib.wcslibPkg.wcsSetProp_restfrq|
% C++ Signature: bool wcsSetProp_restfrq(double value)
wcsSetProp_restfrqDefinition = addFunction(libDef, ...
    "bool wcsSetProp_restfrq(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_restfrq", ...
    "Description", "clib.wcslibPkg.wcsSetProp_restfrq    Representation of C++ function wcsSetProp_restfrq."); % Modify help description values as needed.
defineArgument(wcsSetProp_restfrqDefinition, "value", "double");
defineOutput(wcsSetProp_restfrqDefinition, "RetVal", "logical");
validate(wcsSetProp_restfrqDefinition);
%% C++ function |wcsGetProp_restwav| with MATLAB name |clib.wcslibPkg.wcsGetProp_restwav|
% C++ Signature: double wcsGetProp_restwav()
wcsGetProp_restwavDefinition = addFunction(libDef, ...
    "double wcsGetProp_restwav()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_restwav", ...
    "Description", "clib.wcslibPkg.wcsGetProp_restwav    Representation of C++ function wcsGetProp_restwav."); % Modify help description values as needed.
defineOutput(wcsGetProp_restwavDefinition, "RetVal", "double");
validate(wcsGetProp_restwavDefinition);
%% C++ function |wcsSetProp_restwav| with MATLAB name |clib.wcslibPkg.wcsSetProp_restwav|
% C++ Signature: bool wcsSetProp_restwav(double value)
wcsSetProp_restwavDefinition = addFunction(libDef, ...
    "bool wcsSetProp_restwav(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_restwav", ...
    "Description", "clib.wcslibPkg.wcsSetProp_restwav    Representation of C++ function wcsSetProp_restwav."); % Modify help description values as needed.
defineArgument(wcsSetProp_restwavDefinition, "value", "double");
defineOutput(wcsSetProp_restwavDefinition, "RetVal", "logical");
validate(wcsSetProp_restwavDefinition);
%% C++ function |wcsGetProp_npv| with MATLAB name |clib.wcslibPkg.wcsGetProp_npv|
% C++ Signature: int wcsGetProp_npv()
wcsGetProp_npvDefinition = addFunction(libDef, ...
    "int wcsGetProp_npv()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_npv", ...
    "Description", "clib.wcslibPkg.wcsGetProp_npv    Representation of C++ function wcsGetProp_npv."); % Modify help description values as needed.
defineOutput(wcsGetProp_npvDefinition, "RetVal", "int32");
validate(wcsGetProp_npvDefinition);
%% C++ function |wcsSetProp_npv| with MATLAB name |clib.wcslibPkg.wcsSetProp_npv|
% C++ Signature: bool wcsSetProp_npv(int value)
wcsSetProp_npvDefinition = addFunction(libDef, ...
    "bool wcsSetProp_npv(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_npv", ...
    "Description", "clib.wcslibPkg.wcsSetProp_npv    Representation of C++ function wcsSetProp_npv."); % Modify help description values as needed.
defineArgument(wcsSetProp_npvDefinition, "value", "int32");
defineOutput(wcsSetProp_npvDefinition, "RetVal", "logical");
validate(wcsSetProp_npvDefinition);
%% C++ function |wcsGetProp_npvmax| with MATLAB name |clib.wcslibPkg.wcsGetProp_npvmax|
% C++ Signature: int wcsGetProp_npvmax()
wcsGetProp_npvmaxDefinition = addFunction(libDef, ...
    "int wcsGetProp_npvmax()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_npvmax", ...
    "Description", "clib.wcslibPkg.wcsGetProp_npvmax    Representation of C++ function wcsGetProp_npvmax."); % Modify help description values as needed.
defineOutput(wcsGetProp_npvmaxDefinition, "RetVal", "int32");
validate(wcsGetProp_npvmaxDefinition);
%% C++ function |wcsSetProp_npvmax| with MATLAB name |clib.wcslibPkg.wcsSetProp_npvmax|
% C++ Signature: bool wcsSetProp_npvmax(int value)
wcsSetProp_npvmaxDefinition = addFunction(libDef, ...
    "bool wcsSetProp_npvmax(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_npvmax", ...
    "Description", "clib.wcslibPkg.wcsSetProp_npvmax    Representation of C++ function wcsSetProp_npvmax."); % Modify help description values as needed.
defineArgument(wcsSetProp_npvmaxDefinition, "value", "int32");
defineOutput(wcsSetProp_npvmaxDefinition, "RetVal", "logical");
validate(wcsSetProp_npvmaxDefinition);
%% C++ function |wcsGetProp_nps| with MATLAB name |clib.wcslibPkg.wcsGetProp_nps|
% C++ Signature: int wcsGetProp_nps()
wcsGetProp_npsDefinition = addFunction(libDef, ...
    "int wcsGetProp_nps()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_nps", ...
    "Description", "clib.wcslibPkg.wcsGetProp_nps    Representation of C++ function wcsGetProp_nps."); % Modify help description values as needed.
defineOutput(wcsGetProp_npsDefinition, "RetVal", "int32");
validate(wcsGetProp_npsDefinition);
%% C++ function |wcsSetProp_nps| with MATLAB name |clib.wcslibPkg.wcsSetProp_nps|
% C++ Signature: bool wcsSetProp_nps(int value)
wcsSetProp_npsDefinition = addFunction(libDef, ...
    "bool wcsSetProp_nps(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_nps", ...
    "Description", "clib.wcslibPkg.wcsSetProp_nps    Representation of C++ function wcsSetProp_nps."); % Modify help description values as needed.
defineArgument(wcsSetProp_npsDefinition, "value", "int32");
defineOutput(wcsSetProp_npsDefinition, "RetVal", "logical");
validate(wcsSetProp_npsDefinition);
%% C++ function |wcsGetProp_npsmax| with MATLAB name |clib.wcslibPkg.wcsGetProp_npsmax|
% C++ Signature: int wcsGetProp_npsmax()
wcsGetProp_npsmaxDefinition = addFunction(libDef, ...
    "int wcsGetProp_npsmax()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_npsmax", ...
    "Description", "clib.wcslibPkg.wcsGetProp_npsmax    Representation of C++ function wcsGetProp_npsmax."); % Modify help description values as needed.
defineOutput(wcsGetProp_npsmaxDefinition, "RetVal", "int32");
validate(wcsGetProp_npsmaxDefinition);
%% C++ function |wcsSetProp_npsmax| with MATLAB name |clib.wcslibPkg.wcsSetProp_npsmax|
% C++ Signature: bool wcsSetProp_npsmax(int value)
wcsSetProp_npsmaxDefinition = addFunction(libDef, ...
    "bool wcsSetProp_npsmax(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_npsmax", ...
    "Description", "clib.wcslibPkg.wcsSetProp_npsmax    Representation of C++ function wcsSetProp_npsmax."); % Modify help description values as needed.
defineArgument(wcsSetProp_npsmaxDefinition, "value", "int32");
defineOutput(wcsSetProp_npsmaxDefinition, "RetVal", "logical");
validate(wcsSetProp_npsmaxDefinition);
%% C++ function |wcsGetProp_altlin| with MATLAB name |clib.wcslibPkg.wcsGetProp_altlin|
% C++ Signature: int wcsGetProp_altlin()
wcsGetProp_altlinDefinition = addFunction(libDef, ...
    "int wcsGetProp_altlin()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_altlin", ...
    "Description", "clib.wcslibPkg.wcsGetProp_altlin    Representation of C++ function wcsGetProp_altlin."); % Modify help description values as needed.
defineOutput(wcsGetProp_altlinDefinition, "RetVal", "int32");
validate(wcsGetProp_altlinDefinition);
%% C++ function |wcsSetProp_altlin| with MATLAB name |clib.wcslibPkg.wcsSetProp_altlin|
% C++ Signature: bool wcsSetProp_altlin(int value)
wcsSetProp_altlinDefinition = addFunction(libDef, ...
    "bool wcsSetProp_altlin(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_altlin", ...
    "Description", "clib.wcslibPkg.wcsSetProp_altlin    Representation of C++ function wcsSetProp_altlin."); % Modify help description values as needed.
defineArgument(wcsSetProp_altlinDefinition, "value", "int32");
defineOutput(wcsSetProp_altlinDefinition, "RetVal", "logical");
validate(wcsSetProp_altlinDefinition);
%% C++ function |wcsGetProp_velref| with MATLAB name |clib.wcslibPkg.wcsGetProp_velref|
% C++ Signature: int wcsGetProp_velref()
wcsGetProp_velrefDefinition = addFunction(libDef, ...
    "int wcsGetProp_velref()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_velref", ...
    "Description", "clib.wcslibPkg.wcsGetProp_velref    Representation of C++ function wcsGetProp_velref."); % Modify help description values as needed.
defineOutput(wcsGetProp_velrefDefinition, "RetVal", "int32");
validate(wcsGetProp_velrefDefinition);
%% C++ function |wcsSetProp_velref| with MATLAB name |clib.wcslibPkg.wcsSetProp_velref|
% C++ Signature: bool wcsSetProp_velref(int value)
wcsSetProp_velrefDefinition = addFunction(libDef, ...
    "bool wcsSetProp_velref(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_velref", ...
    "Description", "clib.wcslibPkg.wcsSetProp_velref    Representation of C++ function wcsSetProp_velref."); % Modify help description values as needed.
defineArgument(wcsSetProp_velrefDefinition, "value", "int32");
defineOutput(wcsSetProp_velrefDefinition, "RetVal", "logical");
validate(wcsSetProp_velrefDefinition);
%% C++ function |wcsGetProp_colnum| with MATLAB name |clib.wcslibPkg.wcsGetProp_colnum|
% C++ Signature: int wcsGetProp_colnum()
wcsGetProp_colnumDefinition = addFunction(libDef, ...
    "int wcsGetProp_colnum()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_colnum", ...
    "Description", "clib.wcslibPkg.wcsGetProp_colnum    Representation of C++ function wcsGetProp_colnum."); % Modify help description values as needed.
defineOutput(wcsGetProp_colnumDefinition, "RetVal", "int32");
validate(wcsGetProp_colnumDefinition);
%% C++ function |wcsSetProp_colnum| with MATLAB name |clib.wcslibPkg.wcsSetProp_colnum|
% C++ Signature: bool wcsSetProp_colnum(int value)
wcsSetProp_colnumDefinition = addFunction(libDef, ...
    "bool wcsSetProp_colnum(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_colnum", ...
    "Description", "clib.wcslibPkg.wcsSetProp_colnum    Representation of C++ function wcsSetProp_colnum."); % Modify help description values as needed.
defineArgument(wcsSetProp_colnumDefinition, "value", "int32");
defineOutput(wcsSetProp_colnumDefinition, "RetVal", "logical");
validate(wcsSetProp_colnumDefinition);
%% C++ function |wcsGetProp_timeoffs| with MATLAB name |clib.wcslibPkg.wcsGetProp_timeoffs|
% C++ Signature: double wcsGetProp_timeoffs()
wcsGetProp_timeoffsDefinition = addFunction(libDef, ...
    "double wcsGetProp_timeoffs()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_timeoffs", ...
    "Description", "clib.wcslibPkg.wcsGetProp_timeoffs    Representation of C++ function wcsGetProp_timeoffs."); % Modify help description values as needed.
defineOutput(wcsGetProp_timeoffsDefinition, "RetVal", "double");
validate(wcsGetProp_timeoffsDefinition);
%% C++ function |wcsSetProp_timeoffs| with MATLAB name |clib.wcslibPkg.wcsSetProp_timeoffs|
% C++ Signature: bool wcsSetProp_timeoffs(double value)
wcsSetProp_timeoffsDefinition = addFunction(libDef, ...
    "bool wcsSetProp_timeoffs(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_timeoffs", ...
    "Description", "clib.wcslibPkg.wcsSetProp_timeoffs    Representation of C++ function wcsSetProp_timeoffs."); % Modify help description values as needed.
defineArgument(wcsSetProp_timeoffsDefinition, "value", "double");
defineOutput(wcsSetProp_timeoffsDefinition, "RetVal", "logical");
validate(wcsSetProp_timeoffsDefinition);
%% C++ function |wcsGetProp_mjdobs| with MATLAB name |clib.wcslibPkg.wcsGetProp_mjdobs|
% C++ Signature: double wcsGetProp_mjdobs()
wcsGetProp_mjdobsDefinition = addFunction(libDef, ...
    "double wcsGetProp_mjdobs()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_mjdobs", ...
    "Description", "clib.wcslibPkg.wcsGetProp_mjdobs    Representation of C++ function wcsGetProp_mjdobs."); % Modify help description values as needed.
defineOutput(wcsGetProp_mjdobsDefinition, "RetVal", "double");
validate(wcsGetProp_mjdobsDefinition);
%% C++ function |wcsSetProp_mjdobs| with MATLAB name |clib.wcslibPkg.wcsSetProp_mjdobs|
% C++ Signature: bool wcsSetProp_mjdobs(double value)
wcsSetProp_mjdobsDefinition = addFunction(libDef, ...
    "bool wcsSetProp_mjdobs(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_mjdobs", ...
    "Description", "clib.wcslibPkg.wcsSetProp_mjdobs    Representation of C++ function wcsSetProp_mjdobs."); % Modify help description values as needed.
defineArgument(wcsSetProp_mjdobsDefinition, "value", "double");
defineOutput(wcsSetProp_mjdobsDefinition, "RetVal", "logical");
validate(wcsSetProp_mjdobsDefinition);
%% C++ function |wcsGetProp_mjdbeg| with MATLAB name |clib.wcslibPkg.wcsGetProp_mjdbeg|
% C++ Signature: double wcsGetProp_mjdbeg()
wcsGetProp_mjdbegDefinition = addFunction(libDef, ...
    "double wcsGetProp_mjdbeg()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_mjdbeg", ...
    "Description", "clib.wcslibPkg.wcsGetProp_mjdbeg    Representation of C++ function wcsGetProp_mjdbeg."); % Modify help description values as needed.
defineOutput(wcsGetProp_mjdbegDefinition, "RetVal", "double");
validate(wcsGetProp_mjdbegDefinition);
%% C++ function |wcsSetProp_mjdbeg| with MATLAB name |clib.wcslibPkg.wcsSetProp_mjdbeg|
% C++ Signature: bool wcsSetProp_mjdbeg(double value)
wcsSetProp_mjdbegDefinition = addFunction(libDef, ...
    "bool wcsSetProp_mjdbeg(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_mjdbeg", ...
    "Description", "clib.wcslibPkg.wcsSetProp_mjdbeg    Representation of C++ function wcsSetProp_mjdbeg."); % Modify help description values as needed.
defineArgument(wcsSetProp_mjdbegDefinition, "value", "double");
defineOutput(wcsSetProp_mjdbegDefinition, "RetVal", "logical");
validate(wcsSetProp_mjdbegDefinition);
%% C++ function |wcsGetProp_mjdavg| with MATLAB name |clib.wcslibPkg.wcsGetProp_mjdavg|
% C++ Signature: double wcsGetProp_mjdavg()
wcsGetProp_mjdavgDefinition = addFunction(libDef, ...
    "double wcsGetProp_mjdavg()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_mjdavg", ...
    "Description", "clib.wcslibPkg.wcsGetProp_mjdavg    Representation of C++ function wcsGetProp_mjdavg."); % Modify help description values as needed.
defineOutput(wcsGetProp_mjdavgDefinition, "RetVal", "double");
validate(wcsGetProp_mjdavgDefinition);
%% C++ function |wcsSetProp_mjdavg| with MATLAB name |clib.wcslibPkg.wcsSetProp_mjdavg|
% C++ Signature: bool wcsSetProp_mjdavg(double value)
wcsSetProp_mjdavgDefinition = addFunction(libDef, ...
    "bool wcsSetProp_mjdavg(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_mjdavg", ...
    "Description", "clib.wcslibPkg.wcsSetProp_mjdavg    Representation of C++ function wcsSetProp_mjdavg."); % Modify help description values as needed.
defineArgument(wcsSetProp_mjdavgDefinition, "value", "double");
defineOutput(wcsSetProp_mjdavgDefinition, "RetVal", "logical");
validate(wcsSetProp_mjdavgDefinition);
%% C++ function |wcsGetProp_mjdend| with MATLAB name |clib.wcslibPkg.wcsGetProp_mjdend|
% C++ Signature: double wcsGetProp_mjdend()
wcsGetProp_mjdendDefinition = addFunction(libDef, ...
    "double wcsGetProp_mjdend()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_mjdend", ...
    "Description", "clib.wcslibPkg.wcsGetProp_mjdend    Representation of C++ function wcsGetProp_mjdend."); % Modify help description values as needed.
defineOutput(wcsGetProp_mjdendDefinition, "RetVal", "double");
validate(wcsGetProp_mjdendDefinition);
%% C++ function |wcsSetProp_mjdend| with MATLAB name |clib.wcslibPkg.wcsSetProp_mjdend|
% C++ Signature: bool wcsSetProp_mjdend(double value)
wcsSetProp_mjdendDefinition = addFunction(libDef, ...
    "bool wcsSetProp_mjdend(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_mjdend", ...
    "Description", "clib.wcslibPkg.wcsSetProp_mjdend    Representation of C++ function wcsSetProp_mjdend."); % Modify help description values as needed.
defineArgument(wcsSetProp_mjdendDefinition, "value", "double");
defineOutput(wcsSetProp_mjdendDefinition, "RetVal", "logical");
validate(wcsSetProp_mjdendDefinition);
%% C++ function |wcsGetProp_jepoch| with MATLAB name |clib.wcslibPkg.wcsGetProp_jepoch|
% C++ Signature: double wcsGetProp_jepoch()
wcsGetProp_jepochDefinition = addFunction(libDef, ...
    "double wcsGetProp_jepoch()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_jepoch", ...
    "Description", "clib.wcslibPkg.wcsGetProp_jepoch    Representation of C++ function wcsGetProp_jepoch."); % Modify help description values as needed.
defineOutput(wcsGetProp_jepochDefinition, "RetVal", "double");
validate(wcsGetProp_jepochDefinition);
%% C++ function |wcsSetProp_jepoch| with MATLAB name |clib.wcslibPkg.wcsSetProp_jepoch|
% C++ Signature: bool wcsSetProp_jepoch(double value)
wcsSetProp_jepochDefinition = addFunction(libDef, ...
    "bool wcsSetProp_jepoch(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_jepoch", ...
    "Description", "clib.wcslibPkg.wcsSetProp_jepoch    Representation of C++ function wcsSetProp_jepoch."); % Modify help description values as needed.
defineArgument(wcsSetProp_jepochDefinition, "value", "double");
defineOutput(wcsSetProp_jepochDefinition, "RetVal", "logical");
validate(wcsSetProp_jepochDefinition);
%% C++ function |wcsGetProp_bepoch| with MATLAB name |clib.wcslibPkg.wcsGetProp_bepoch|
% C++ Signature: double wcsGetProp_bepoch()
wcsGetProp_bepochDefinition = addFunction(libDef, ...
    "double wcsGetProp_bepoch()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_bepoch", ...
    "Description", "clib.wcslibPkg.wcsGetProp_bepoch    Representation of C++ function wcsGetProp_bepoch."); % Modify help description values as needed.
defineOutput(wcsGetProp_bepochDefinition, "RetVal", "double");
validate(wcsGetProp_bepochDefinition);
%% C++ function |wcsSetProp_bepoch| with MATLAB name |clib.wcslibPkg.wcsSetProp_bepoch|
% C++ Signature: bool wcsSetProp_bepoch(double value)
wcsSetProp_bepochDefinition = addFunction(libDef, ...
    "bool wcsSetProp_bepoch(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_bepoch", ...
    "Description", "clib.wcslibPkg.wcsSetProp_bepoch    Representation of C++ function wcsSetProp_bepoch."); % Modify help description values as needed.
defineArgument(wcsSetProp_bepochDefinition, "value", "double");
defineOutput(wcsSetProp_bepochDefinition, "RetVal", "logical");
validate(wcsSetProp_bepochDefinition);
%% C++ function |wcsGetProp_tstart| with MATLAB name |clib.wcslibPkg.wcsGetProp_tstart|
% C++ Signature: double wcsGetProp_tstart()
wcsGetProp_tstartDefinition = addFunction(libDef, ...
    "double wcsGetProp_tstart()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_tstart", ...
    "Description", "clib.wcslibPkg.wcsGetProp_tstart    Representation of C++ function wcsGetProp_tstart."); % Modify help description values as needed.
defineOutput(wcsGetProp_tstartDefinition, "RetVal", "double");
validate(wcsGetProp_tstartDefinition);
%% C++ function |wcsSetProp_tstart| with MATLAB name |clib.wcslibPkg.wcsSetProp_tstart|
% C++ Signature: bool wcsSetProp_tstart(double value)
wcsSetProp_tstartDefinition = addFunction(libDef, ...
    "bool wcsSetProp_tstart(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_tstart", ...
    "Description", "clib.wcslibPkg.wcsSetProp_tstart    Representation of C++ function wcsSetProp_tstart."); % Modify help description values as needed.
defineArgument(wcsSetProp_tstartDefinition, "value", "double");
defineOutput(wcsSetProp_tstartDefinition, "RetVal", "logical");
validate(wcsSetProp_tstartDefinition);
%% C++ function |wcsGetProp_tstop| with MATLAB name |clib.wcslibPkg.wcsGetProp_tstop|
% C++ Signature: double wcsGetProp_tstop()
wcsGetProp_tstopDefinition = addFunction(libDef, ...
    "double wcsGetProp_tstop()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_tstop", ...
    "Description", "clib.wcslibPkg.wcsGetProp_tstop    Representation of C++ function wcsGetProp_tstop."); % Modify help description values as needed.
defineOutput(wcsGetProp_tstopDefinition, "RetVal", "double");
validate(wcsGetProp_tstopDefinition);
%% C++ function |wcsSetProp_tstop| with MATLAB name |clib.wcslibPkg.wcsSetProp_tstop|
% C++ Signature: bool wcsSetProp_tstop(double value)
wcsSetProp_tstopDefinition = addFunction(libDef, ...
    "bool wcsSetProp_tstop(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_tstop", ...
    "Description", "clib.wcslibPkg.wcsSetProp_tstop    Representation of C++ function wcsSetProp_tstop."); % Modify help description values as needed.
defineArgument(wcsSetProp_tstopDefinition, "value", "double");
defineOutput(wcsSetProp_tstopDefinition, "RetVal", "logical");
validate(wcsSetProp_tstopDefinition);
%% C++ function |wcsGetProp_xposure| with MATLAB name |clib.wcslibPkg.wcsGetProp_xposure|
% C++ Signature: double wcsGetProp_xposure()
wcsGetProp_xposureDefinition = addFunction(libDef, ...
    "double wcsGetProp_xposure()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_xposure", ...
    "Description", "clib.wcslibPkg.wcsGetProp_xposure    Representation of C++ function wcsGetProp_xposure."); % Modify help description values as needed.
defineOutput(wcsGetProp_xposureDefinition, "RetVal", "double");
validate(wcsGetProp_xposureDefinition);
%% C++ function |wcsSetProp_xposure| with MATLAB name |clib.wcslibPkg.wcsSetProp_xposure|
% C++ Signature: bool wcsSetProp_xposure(double value)
wcsSetProp_xposureDefinition = addFunction(libDef, ...
    "bool wcsSetProp_xposure(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_xposure", ...
    "Description", "clib.wcslibPkg.wcsSetProp_xposure    Representation of C++ function wcsSetProp_xposure."); % Modify help description values as needed.
defineArgument(wcsSetProp_xposureDefinition, "value", "double");
defineOutput(wcsSetProp_xposureDefinition, "RetVal", "logical");
validate(wcsSetProp_xposureDefinition);
%% C++ function |wcsGetProp_telapse| with MATLAB name |clib.wcslibPkg.wcsGetProp_telapse|
% C++ Signature: double wcsGetProp_telapse()
wcsGetProp_telapseDefinition = addFunction(libDef, ...
    "double wcsGetProp_telapse()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_telapse", ...
    "Description", "clib.wcslibPkg.wcsGetProp_telapse    Representation of C++ function wcsGetProp_telapse."); % Modify help description values as needed.
defineOutput(wcsGetProp_telapseDefinition, "RetVal", "double");
validate(wcsGetProp_telapseDefinition);
%% C++ function |wcsSetProp_telapse| with MATLAB name |clib.wcslibPkg.wcsSetProp_telapse|
% C++ Signature: bool wcsSetProp_telapse(double value)
wcsSetProp_telapseDefinition = addFunction(libDef, ...
    "bool wcsSetProp_telapse(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_telapse", ...
    "Description", "clib.wcslibPkg.wcsSetProp_telapse    Representation of C++ function wcsSetProp_telapse."); % Modify help description values as needed.
defineArgument(wcsSetProp_telapseDefinition, "value", "double");
defineOutput(wcsSetProp_telapseDefinition, "RetVal", "logical");
validate(wcsSetProp_telapseDefinition);
%% C++ function |wcsGetProp_timsyer| with MATLAB name |clib.wcslibPkg.wcsGetProp_timsyer|
% C++ Signature: double wcsGetProp_timsyer()
wcsGetProp_timsyerDefinition = addFunction(libDef, ...
    "double wcsGetProp_timsyer()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_timsyer", ...
    "Description", "clib.wcslibPkg.wcsGetProp_timsyer    Representation of C++ function wcsGetProp_timsyer."); % Modify help description values as needed.
defineOutput(wcsGetProp_timsyerDefinition, "RetVal", "double");
validate(wcsGetProp_timsyerDefinition);
%% C++ function |wcsSetProp_timsyer| with MATLAB name |clib.wcslibPkg.wcsSetProp_timsyer|
% C++ Signature: bool wcsSetProp_timsyer(double value)
wcsSetProp_timsyerDefinition = addFunction(libDef, ...
    "bool wcsSetProp_timsyer(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_timsyer", ...
    "Description", "clib.wcslibPkg.wcsSetProp_timsyer    Representation of C++ function wcsSetProp_timsyer."); % Modify help description values as needed.
defineArgument(wcsSetProp_timsyerDefinition, "value", "double");
defineOutput(wcsSetProp_timsyerDefinition, "RetVal", "logical");
validate(wcsSetProp_timsyerDefinition);
%% C++ function |wcsGetProp_timrder| with MATLAB name |clib.wcslibPkg.wcsGetProp_timrder|
% C++ Signature: double wcsGetProp_timrder()
wcsGetProp_timrderDefinition = addFunction(libDef, ...
    "double wcsGetProp_timrder()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_timrder", ...
    "Description", "clib.wcslibPkg.wcsGetProp_timrder    Representation of C++ function wcsGetProp_timrder."); % Modify help description values as needed.
defineOutput(wcsGetProp_timrderDefinition, "RetVal", "double");
validate(wcsGetProp_timrderDefinition);
%% C++ function |wcsSetProp_timrder| with MATLAB name |clib.wcslibPkg.wcsSetProp_timrder|
% C++ Signature: bool wcsSetProp_timrder(double value)
wcsSetProp_timrderDefinition = addFunction(libDef, ...
    "bool wcsSetProp_timrder(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_timrder", ...
    "Description", "clib.wcslibPkg.wcsSetProp_timrder    Representation of C++ function wcsSetProp_timrder."); % Modify help description values as needed.
defineArgument(wcsSetProp_timrderDefinition, "value", "double");
defineOutput(wcsSetProp_timrderDefinition, "RetVal", "logical");
validate(wcsSetProp_timrderDefinition);
%% C++ function |wcsGetProp_timedel| with MATLAB name |clib.wcslibPkg.wcsGetProp_timedel|
% C++ Signature: double wcsGetProp_timedel()
wcsGetProp_timedelDefinition = addFunction(libDef, ...
    "double wcsGetProp_timedel()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_timedel", ...
    "Description", "clib.wcslibPkg.wcsGetProp_timedel    Representation of C++ function wcsGetProp_timedel."); % Modify help description values as needed.
defineOutput(wcsGetProp_timedelDefinition, "RetVal", "double");
validate(wcsGetProp_timedelDefinition);
%% C++ function |wcsSetProp_timedel| with MATLAB name |clib.wcslibPkg.wcsSetProp_timedel|
% C++ Signature: bool wcsSetProp_timedel(double value)
wcsSetProp_timedelDefinition = addFunction(libDef, ...
    "bool wcsSetProp_timedel(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_timedel", ...
    "Description", "clib.wcslibPkg.wcsSetProp_timedel    Representation of C++ function wcsSetProp_timedel."); % Modify help description values as needed.
defineArgument(wcsSetProp_timedelDefinition, "value", "double");
defineOutput(wcsSetProp_timedelDefinition, "RetVal", "logical");
validate(wcsSetProp_timedelDefinition);
%% C++ function |wcsGetProp_timepixr| with MATLAB name |clib.wcslibPkg.wcsGetProp_timepixr|
% C++ Signature: double wcsGetProp_timepixr()
wcsGetProp_timepixrDefinition = addFunction(libDef, ...
    "double wcsGetProp_timepixr()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_timepixr", ...
    "Description", "clib.wcslibPkg.wcsGetProp_timepixr    Representation of C++ function wcsGetProp_timepixr."); % Modify help description values as needed.
defineOutput(wcsGetProp_timepixrDefinition, "RetVal", "double");
validate(wcsGetProp_timepixrDefinition);
%% C++ function |wcsSetProp_timepixr| with MATLAB name |clib.wcslibPkg.wcsSetProp_timepixr|
% C++ Signature: bool wcsSetProp_timepixr(double value)
wcsSetProp_timepixrDefinition = addFunction(libDef, ...
    "bool wcsSetProp_timepixr(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_timepixr", ...
    "Description", "clib.wcslibPkg.wcsSetProp_timepixr    Representation of C++ function wcsSetProp_timepixr."); % Modify help description values as needed.
defineArgument(wcsSetProp_timepixrDefinition, "value", "double");
defineOutput(wcsSetProp_timepixrDefinition, "RetVal", "logical");
validate(wcsSetProp_timepixrDefinition);
%% C++ function |wcsGetProp_equinox| with MATLAB name |clib.wcslibPkg.wcsGetProp_equinox|
% C++ Signature: double wcsGetProp_equinox()
wcsGetProp_equinoxDefinition = addFunction(libDef, ...
    "double wcsGetProp_equinox()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_equinox", ...
    "Description", "clib.wcslibPkg.wcsGetProp_equinox    Representation of C++ function wcsGetProp_equinox."); % Modify help description values as needed.
defineOutput(wcsGetProp_equinoxDefinition, "RetVal", "double");
validate(wcsGetProp_equinoxDefinition);
%% C++ function |wcsSetProp_equinox| with MATLAB name |clib.wcslibPkg.wcsSetProp_equinox|
% C++ Signature: bool wcsSetProp_equinox(double value)
wcsSetProp_equinoxDefinition = addFunction(libDef, ...
    "bool wcsSetProp_equinox(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_equinox", ...
    "Description", "clib.wcslibPkg.wcsSetProp_equinox    Representation of C++ function wcsSetProp_equinox."); % Modify help description values as needed.
defineArgument(wcsSetProp_equinoxDefinition, "value", "double");
defineOutput(wcsSetProp_equinoxDefinition, "RetVal", "logical");
validate(wcsSetProp_equinoxDefinition);
%% C++ function |wcsGetProp_velosys| with MATLAB name |clib.wcslibPkg.wcsGetProp_velosys|
% C++ Signature: double wcsGetProp_velosys()
wcsGetProp_velosysDefinition = addFunction(libDef, ...
    "double wcsGetProp_velosys()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_velosys", ...
    "Description", "clib.wcslibPkg.wcsGetProp_velosys    Representation of C++ function wcsGetProp_velosys."); % Modify help description values as needed.
defineOutput(wcsGetProp_velosysDefinition, "RetVal", "double");
validate(wcsGetProp_velosysDefinition);
%% C++ function |wcsSetProp_velosys| with MATLAB name |clib.wcslibPkg.wcsSetProp_velosys|
% C++ Signature: bool wcsSetProp_velosys(double value)
wcsSetProp_velosysDefinition = addFunction(libDef, ...
    "bool wcsSetProp_velosys(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_velosys", ...
    "Description", "clib.wcslibPkg.wcsSetProp_velosys    Representation of C++ function wcsSetProp_velosys."); % Modify help description values as needed.
defineArgument(wcsSetProp_velosysDefinition, "value", "double");
defineOutput(wcsSetProp_velosysDefinition, "RetVal", "logical");
validate(wcsSetProp_velosysDefinition);
%% C++ function |wcsGetProp_zsource| with MATLAB name |clib.wcslibPkg.wcsGetProp_zsource|
% C++ Signature: double wcsGetProp_zsource()
wcsGetProp_zsourceDefinition = addFunction(libDef, ...
    "double wcsGetProp_zsource()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_zsource", ...
    "Description", "clib.wcslibPkg.wcsGetProp_zsource    Representation of C++ function wcsGetProp_zsource."); % Modify help description values as needed.
defineOutput(wcsGetProp_zsourceDefinition, "RetVal", "double");
validate(wcsGetProp_zsourceDefinition);
%% C++ function |wcsSetProp_zsource| with MATLAB name |clib.wcslibPkg.wcsSetProp_zsource|
% C++ Signature: bool wcsSetProp_zsource(double value)
wcsSetProp_zsourceDefinition = addFunction(libDef, ...
    "bool wcsSetProp_zsource(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_zsource", ...
    "Description", "clib.wcslibPkg.wcsSetProp_zsource    Representation of C++ function wcsSetProp_zsource."); % Modify help description values as needed.
defineArgument(wcsSetProp_zsourceDefinition, "value", "double");
defineOutput(wcsSetProp_zsourceDefinition, "RetVal", "logical");
validate(wcsSetProp_zsourceDefinition);
%% C++ function |wcsGetProp_velangl| with MATLAB name |clib.wcslibPkg.wcsGetProp_velangl|
% C++ Signature: double wcsGetProp_velangl()
wcsGetProp_velanglDefinition = addFunction(libDef, ...
    "double wcsGetProp_velangl()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_velangl", ...
    "Description", "clib.wcslibPkg.wcsGetProp_velangl    Representation of C++ function wcsGetProp_velangl."); % Modify help description values as needed.
defineOutput(wcsGetProp_velanglDefinition, "RetVal", "double");
validate(wcsGetProp_velanglDefinition);
%% C++ function |wcsSetProp_velangl| with MATLAB name |clib.wcslibPkg.wcsSetProp_velangl|
% C++ Signature: bool wcsSetProp_velangl(double value)
wcsSetProp_velanglDefinition = addFunction(libDef, ...
    "bool wcsSetProp_velangl(double value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_velangl", ...
    "Description", "clib.wcslibPkg.wcsSetProp_velangl    Representation of C++ function wcsSetProp_velangl."); % Modify help description values as needed.
defineArgument(wcsSetProp_velanglDefinition, "value", "double");
defineOutput(wcsSetProp_velanglDefinition, "RetVal", "logical");
validate(wcsSetProp_velanglDefinition);
%% C++ function |wcsGetProp_ntab| with MATLAB name |clib.wcslibPkg.wcsGetProp_ntab|
% C++ Signature: int wcsGetProp_ntab()
wcsGetProp_ntabDefinition = addFunction(libDef, ...
    "int wcsGetProp_ntab()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_ntab", ...
    "Description", "clib.wcslibPkg.wcsGetProp_ntab    Representation of C++ function wcsGetProp_ntab."); % Modify help description values as needed.
defineOutput(wcsGetProp_ntabDefinition, "RetVal", "int32");
validate(wcsGetProp_ntabDefinition);
%% C++ function |wcsSetProp_ntab| with MATLAB name |clib.wcslibPkg.wcsSetProp_ntab|
% C++ Signature: bool wcsSetProp_ntab(int value)
wcsSetProp_ntabDefinition = addFunction(libDef, ...
    "bool wcsSetProp_ntab(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_ntab", ...
    "Description", "clib.wcslibPkg.wcsSetProp_ntab    Representation of C++ function wcsSetProp_ntab."); % Modify help description values as needed.
defineArgument(wcsSetProp_ntabDefinition, "value", "int32");
defineOutput(wcsSetProp_ntabDefinition, "RetVal", "logical");
validate(wcsSetProp_ntabDefinition);
%% C++ function |wcsGetProp_nwtb| with MATLAB name |clib.wcslibPkg.wcsGetProp_nwtb|
% C++ Signature: int wcsGetProp_nwtb()
wcsGetProp_nwtbDefinition = addFunction(libDef, ...
    "int wcsGetProp_nwtb()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_nwtb", ...
    "Description", "clib.wcslibPkg.wcsGetProp_nwtb    Representation of C++ function wcsGetProp_nwtb."); % Modify help description values as needed.
defineOutput(wcsGetProp_nwtbDefinition, "RetVal", "int32");
validate(wcsGetProp_nwtbDefinition);
%% C++ function |wcsSetProp_nwtb| with MATLAB name |clib.wcslibPkg.wcsSetProp_nwtb|
% C++ Signature: bool wcsSetProp_nwtb(int value)
wcsSetProp_nwtbDefinition = addFunction(libDef, ...
    "bool wcsSetProp_nwtb(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_nwtb", ...
    "Description", "clib.wcslibPkg.wcsSetProp_nwtb    Representation of C++ function wcsSetProp_nwtb."); % Modify help description values as needed.
defineArgument(wcsSetProp_nwtbDefinition, "value", "int32");
defineOutput(wcsSetProp_nwtbDefinition, "RetVal", "logical");
validate(wcsSetProp_nwtbDefinition);
%% C++ function |wcsGetProp_lng| with MATLAB name |clib.wcslibPkg.wcsGetProp_lng|
% C++ Signature: int wcsGetProp_lng()
wcsGetProp_lngDefinition = addFunction(libDef, ...
    "int wcsGetProp_lng()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_lng", ...
    "Description", "clib.wcslibPkg.wcsGetProp_lng    Representation of C++ function wcsGetProp_lng."); % Modify help description values as needed.
defineOutput(wcsGetProp_lngDefinition, "RetVal", "int32");
validate(wcsGetProp_lngDefinition);
%% C++ function |wcsSetProp_lng| with MATLAB name |clib.wcslibPkg.wcsSetProp_lng|
% C++ Signature: bool wcsSetProp_lng(int value)
wcsSetProp_lngDefinition = addFunction(libDef, ...
    "bool wcsSetProp_lng(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_lng", ...
    "Description", "clib.wcslibPkg.wcsSetProp_lng    Representation of C++ function wcsSetProp_lng."); % Modify help description values as needed.
defineArgument(wcsSetProp_lngDefinition, "value", "int32");
defineOutput(wcsSetProp_lngDefinition, "RetVal", "logical");
validate(wcsSetProp_lngDefinition);
%% C++ function |wcsGetProp_lat| with MATLAB name |clib.wcslibPkg.wcsGetProp_lat|
% C++ Signature: int wcsGetProp_lat()
wcsGetProp_latDefinition = addFunction(libDef, ...
    "int wcsGetProp_lat()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_lat", ...
    "Description", "clib.wcslibPkg.wcsGetProp_lat    Representation of C++ function wcsGetProp_lat."); % Modify help description values as needed.
defineOutput(wcsGetProp_latDefinition, "RetVal", "int32");
validate(wcsGetProp_latDefinition);
%% C++ function |wcsSetProp_lat| with MATLAB name |clib.wcslibPkg.wcsSetProp_lat|
% C++ Signature: bool wcsSetProp_lat(int value)
wcsSetProp_latDefinition = addFunction(libDef, ...
    "bool wcsSetProp_lat(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_lat", ...
    "Description", "clib.wcslibPkg.wcsSetProp_lat    Representation of C++ function wcsSetProp_lat."); % Modify help description values as needed.
defineArgument(wcsSetProp_latDefinition, "value", "int32");
defineOutput(wcsSetProp_latDefinition, "RetVal", "logical");
validate(wcsSetProp_latDefinition);
%% C++ function |wcsGetProp_spec| with MATLAB name |clib.wcslibPkg.wcsGetProp_spec|
% C++ Signature: int wcsGetProp_spec()
wcsGetProp_specDefinition = addFunction(libDef, ...
    "int wcsGetProp_spec()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_spec", ...
    "Description", "clib.wcslibPkg.wcsGetProp_spec    Representation of C++ function wcsGetProp_spec."); % Modify help description values as needed.
defineOutput(wcsGetProp_specDefinition, "RetVal", "int32");
validate(wcsGetProp_specDefinition);
%% C++ function |wcsSetProp_spec| with MATLAB name |clib.wcslibPkg.wcsSetProp_spec|
% C++ Signature: bool wcsSetProp_spec(int value)
wcsSetProp_specDefinition = addFunction(libDef, ...
    "bool wcsSetProp_spec(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_spec", ...
    "Description", "clib.wcslibPkg.wcsSetProp_spec    Representation of C++ function wcsSetProp_spec."); % Modify help description values as needed.
defineArgument(wcsSetProp_specDefinition, "value", "int32");
defineOutput(wcsSetProp_specDefinition, "RetVal", "logical");
validate(wcsSetProp_specDefinition);
%% C++ function |wcsGetProp_cubeface| with MATLAB name |clib.wcslibPkg.wcsGetProp_cubeface|
% C++ Signature: int wcsGetProp_cubeface()
wcsGetProp_cubefaceDefinition = addFunction(libDef, ...
    "int wcsGetProp_cubeface()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_cubeface", ...
    "Description", "clib.wcslibPkg.wcsGetProp_cubeface    Representation of C++ function wcsGetProp_cubeface."); % Modify help description values as needed.
defineOutput(wcsGetProp_cubefaceDefinition, "RetVal", "int32");
validate(wcsGetProp_cubefaceDefinition);
%% C++ function |wcsSetProp_cubeface| with MATLAB name |clib.wcslibPkg.wcsSetProp_cubeface|
% C++ Signature: bool wcsSetProp_cubeface(int value)
wcsSetProp_cubefaceDefinition = addFunction(libDef, ...
    "bool wcsSetProp_cubeface(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_cubeface", ...
    "Description", "clib.wcslibPkg.wcsSetProp_cubeface    Representation of C++ function wcsSetProp_cubeface."); % Modify help description values as needed.
defineArgument(wcsSetProp_cubefaceDefinition, "value", "int32");
defineOutput(wcsSetProp_cubefaceDefinition, "RetVal", "logical");
validate(wcsSetProp_cubefaceDefinition);
%% C++ function |wcsGetProp_m_flag| with MATLAB name |clib.wcslibPkg.wcsGetProp_m_flag|
% C++ Signature: int wcsGetProp_m_flag()
wcsGetProp_m_flagDefinition = addFunction(libDef, ...
    "int wcsGetProp_m_flag()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_m_flag", ...
    "Description", "clib.wcslibPkg.wcsGetProp_m_flag    Representation of C++ function wcsGetProp_m_flag."); % Modify help description values as needed.
defineOutput(wcsGetProp_m_flagDefinition, "RetVal", "int32");
validate(wcsGetProp_m_flagDefinition);
%% C++ function |wcsSetProp_m_flag| with MATLAB name |clib.wcslibPkg.wcsSetProp_m_flag|
% C++ Signature: bool wcsSetProp_m_flag(int value)
wcsSetProp_m_flagDefinition = addFunction(libDef, ...
    "bool wcsSetProp_m_flag(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_m_flag", ...
    "Description", "clib.wcslibPkg.wcsSetProp_m_flag    Representation of C++ function wcsSetProp_m_flag."); % Modify help description values as needed.
defineArgument(wcsSetProp_m_flagDefinition, "value", "int32");
defineOutput(wcsSetProp_m_flagDefinition, "RetVal", "logical");
validate(wcsSetProp_m_flagDefinition);
%% C++ function |wcsGetProp_m_naxis| with MATLAB name |clib.wcslibPkg.wcsGetProp_m_naxis|
% C++ Signature: int wcsGetProp_m_naxis()
wcsGetProp_m_naxisDefinition = addFunction(libDef, ...
    "int wcsGetProp_m_naxis()", ...
    "MATLABName", "clib.wcslibPkg.wcsGetProp_m_naxis", ...
    "Description", "clib.wcslibPkg.wcsGetProp_m_naxis    Representation of C++ function wcsGetProp_m_naxis."); % Modify help description values as needed.
defineOutput(wcsGetProp_m_naxisDefinition, "RetVal", "int32");
validate(wcsGetProp_m_naxisDefinition);
%% C++ function |wcsSetProp_m_naxis| with MATLAB name |clib.wcslibPkg.wcsSetProp_m_naxis|
% C++ Signature: bool wcsSetProp_m_naxis(int value)
wcsSetProp_m_naxisDefinition = addFunction(libDef, ...
    "bool wcsSetProp_m_naxis(int value)", ...
    "MATLABName", "clib.wcslibPkg.wcsSetProp_m_naxis", ...
    "Description", "clib.wcslibPkg.wcsSetProp_m_naxis    Representation of C++ function wcsSetProp_m_naxis."); % Modify help description values as needed.
defineArgument(wcsSetProp_m_naxisDefinition, "value", "int32");
defineOutput(wcsSetProp_m_naxisDefinition, "RetVal", "logical");
validate(wcsSetProp_m_naxisDefinition);
%% Validate the library definition
validate(libDef);
end
