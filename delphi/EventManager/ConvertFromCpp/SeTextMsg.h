//---------------------------------------------------------------------------
#ifndef SeTextMsgH
#define SeTextMsgH

#include <vcl.h>
#include "SeAutoBuf.h"
//---------------------------------------------------------------------------
// Moved from SesamTextMsg.h (01/12/2015)
struct PACKAGE TSTextMsg {
public:
	//---------------------------------------------------------------------------
	// Construct from existing buffer
	TSTextMsg(const char* szStr = NULL);
	//---------------------------------------------------------------------------
	// Construct from existing buffer
	TSTextMsg(String Str);
	//---------------------------------------------------------------------------
    void Init();
	//---------------------------------------------------------------------------
    // Assign message
    void Assign(const TSTextMsg& Msg);
    //---------------------------------------------------------------------------
    // Clear message text
	void Clear();
    //---------------------------------------------------------------------------
    // Start message text
    void Start(const char* szStr);
	//---------------------------------------------------------------------------
	// Put string
	void Put(const char* szStr);
	//---------------------------------------------------------------------------
	// Put string, default is to escape it (01/12/2015)
	void Put(const String& Str);
	//---------------------------------------------------------------------------
	// Put string (01/12/2015)
	void PutRaw(const String& Str);
	//---------------------------------------------------------------------------
	// Put string (01/12/2015)
	void PutEsc(const String& Str);
	//---------------------------------------------------------------------------
	// (01/12/2015)
	String Escape(String Str);
	String UnEscape(String Str);
	//---------------------------------------------------------------------------
	void PutInt(int i);
	//---------------------------------------------------------------------------
	void PutDWORD(DWORD dw);
	//---------------------------------------------------------------------------
	void PutFloat(double f);
	//---------------------------------------------------------------------------
	void PutDateTime(TDateTime DT);
	//---------------------------------------------------------------------------
	TDateTime GetDateTime();
	//---------------------------------------------------------------------------
	void PutLines(const String& Str);
	//---------------------------------------------------------------------------
	String GetLines();
	//---------------------------------------------------------------------------
	// Put list in one line, using TStrings::CommaText (16/09/09)
	void PutStringsText(TStrings* List);
	//---------------------------------------------------------------------------
    // ListText is converted to CommaText to be put in one line
    void PutStringsText(String ListText);
	//---------------------------------------------------------------------------
	// Set pointer to start of buffer
    void First();
    //---------------------------------------------------------------------------
    // Get next string
	bool Get(char* szStr, int BufSize = 0);
    //---------------------------------------------------------------------------
	// Get next string
	String Get();
	//---------------------------------------------------------------------------
	// (01/12/2015)
	String GetRaw();
	//---------------------------------------------------------------------------
	// (01/12/2015)
	String GetEsc();
    //---------------------------------------------------------------------------
    // Get rest of text
	String GetToEnd();
	//---------------------------------------------------------------------------
	int GetInt(int Default = 0);
	//---------------------------------------------------------------------------
	DWORD GetDWORD(DWORD Default = 0);
	//---------------------------------------------------------------------------
	double GetFloat(double Default = 0);
	//---------------------------------------------------------------------------
	// Skip Count strings
	bool Skip(int Count);
	//---------------------------------------------------------------------------
	// Return pointer to text
	const char* GetText();
	//---------------------------------------------------------------------------
    AnsiString GetAnsiText();
	//---------------------------------------------------------------------------
	int GetPos();
	//---------------------------------------------------------------------------
	// (07/11/2010)
	void PutStrings(TStringList* Lines);
	//---------------------------------------------------------------------------
	void GetStrings(TStringList*& Lines);
	//---------------------------------------------------------------------------
	String 		Text;
	AnsiString	AnsiText;
	char    	Separator;
	char    	LinesSeparator;
	int     	Pos;
};
//------------------------------------------------------------------------------

#endif
