function Flag=flag_badcol(Image,varargin) 
% 
% Package: @imUtil.background
% Description: 
% Input  : - An array.
%          - Vector of dimensions over which to calculate the robust
%            std. Default is [1 2].
% Output : - The robust median calculated using the scaled iqr
%      By: Eran O. Ofek                       May 2020             
% Example: Image = rand(100,150); Image(23,1) = Image(23,1).*3;
%          Flag=imUtil.background.flag_badcol(Image) 


InPar = inputParser;
addOptional(InPar,'Dim',1);
addOptional(InPar,'Threshold',10);

addOptional(InPar,'CollapseFun','median');
addOptional(InPar,'FilterCollapse','medfilt1');
addOptional(InPar,'FilterCollapsePar',{10});
addOptional(InPar,'StdCollapse','rstd');
addOptional(InPar,'StdCollapsePar',{});
parse(InPar,varargin{:});
InPar = InPar.Results;



Res = imUtil.background.collapse_stat(Image,'Dim',InPar.Dim,...
                                            'CollapseFun',InPar.CollapseFun,...
                                            'FilterCollapse',InPar.FilterCollapse,...
                                            'FilterCollapsePar',InPar.FilterCollapsePar,...
                                            'StdCollapse',InPar.StdCollapse,...
                                            'StdCollapsePar',InPar.StdCollapsePar);

Stat = (Res.Line - Res.FiltLine)./Res.StdLine;
Flag = Stat>InPar.Threshold;




if InPar.Dim==1
    N       = size(Image,1);
    Flag    = repmat(Flag,N,1);
elseif InPar.Dim==2
    N       = size(Image,2);
    Flag    = repmat(Flag,1,N);
else
    error('Dim must be 1 or 2');
end


