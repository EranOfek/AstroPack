% Functions and Classes list for the tools.math package
% Author : autogenerated (Jun 2023)
%          tools.math.allFunList - Functions and Classes list for the tools.math package
%            tools.math.unitTest - Package Unit-Test
%      tools.math.fft.allFunList - Functions and Classes list for the tools.math.fft package
%        tools.math.fft.fft_freq - Return the frequencies corresponding to fftshift(fft(vec_of_size_N))
%   tools.math.fft.fft_symmetric - Make a 1-D fft a complex-conjugate symmetric
%        tools.math.fft.unitTest - Package Unit-Test
%   tools.math.filter.allFunList - Functions and Classes list for the tools.math.filter package
%   tools.math.filter.cornerize1 - Pad a templare an put the template center at the corner, or center.
%      tools.math.filter.filter1 - Apply a 1D filter to data and return statistics in std units.
%   tools.math.filter.filter1ues - One dimensional filtering for unevenly spaced data.
%      tools.math.fit.allFunList - Functions and Classes list for the tools.math.fit package
%      tools.math.fit.fmincon_my - ------------------------------------------------------------------------------
% tools.math.fit.fminsearch_chi2 - ------------------------------------------------------------------------------
%   tools.math.fit.fminsearch_my - ------------------------------------------------------------------------------
%      tools.math.fit.fminunc_my - fminunc.m version in which it is possible to pass additional parameters to the function
%    tools.math.fit.ransacLinear - Fit a linear model Y=a+bX using RANSAC
%  tools.math.fit.ransacLinear2d - RANSAC fitting of 2D data to a 2D linear function
% tools.math.fit.ransacLinearModel - Fit a general linear model using a simplified RANSAC-like scheme
%      tools.math.fun.allFunList - Functions and Classes list for the tools.math.fun package
%    tools.math.fun.chebyshevFun - Generate an anonymous function for Chebyshev polynomials (using
%          tools.math.fun.sincos - Insert a column/s or row/s to a specific position in a matrix.
%   tools.math.geometry.Contents - 
% tools.math.geometry.allFunList - Functions and Classes list for the tools.math.geometry package
% tools.math.geometry.boundingCircle - fit the smallest-radius bounding circle to set of X, Y points
% tools.math.geometry.cells_intersect_line - Find cells in 2D grid that intersets a line.
% tools.math.geometry.cross1_fast - Fast version of cross product of two 3-elements vectors
% tools.math.geometry.cross_fast - Fast cross product of two 3-elements matrices
%    tools.math.geometry.curvlen - Calculate the length of a curve numerically.
% tools.math.geometry.dist_box_edge - Distance of points froma rectangular box.
% tools.math.geometry.dist_p2line - Distance between point and a line.
% tools.math.geometry.plane_dist - Distance between points on a 2D plane.
% tools.math.geometry.plane_dist_thresh - Check if the distance between points on a plane is below some value.
%   tools.math.geometry.polysort - Sort the vertices of convex polygon by position angle.
%       tools.math.geometry.rotm - Return a numeric or symbolic 3-D rotation matrix about the X, Y or Z axis
% tools.math.geometry.traj_mindist - Time of minimum distance between two 2-D linear trajetories
% tools.math.geometry.tri_equidist_center - Poistion of circumscribed circle.
%   tools.math.geometry.unitTest - Package Unit-Test
% tools.math.integral.QuarticSolver - Quartic integral solver: [x1,x2,x3,x4]=QuarticSolver(a,b,c,d,e)
% tools.math.integral.QuarticSolverVec - Quartic integral solver (vectorized): [x1, x2, x3, x4]=QuarticSolverVec(a,b,c,d,e)
% tools.math.integral.allFunList - Functions and Classes list for the tools.math.integral package
%      tools.math.integral.int2d - Numerical integration of a 2-D matrix
% tools.math.integral.integral_percentile - Given a tabulate function find limits that contains percentile
% tools.math.integral.quad_mult2bound - Numerical integration using quad, where the upper bound is a vector
%    tools.math.integral.quad_my - Pass arguments to function in quad
% tools.math.integral.sp_powerlaw_int - --------------------------------------------------------------------------
% tools.math.integral.summatlevel - --------------------------------------------------------------------------
% tools.math.integral.test_QuarticSolver - generate random coefficients for the vectorized tests
%   tools.math.integral.trapzmat - Trapezoidal numerical integration on columns or rows of matrices.
%   tools.math.integral.unitTest - Package Unit-Test
%       tools.math.stat.Contents - 
%     tools.math.stat.allFunList - Functions and Classes list for the tools.math.stat package
%           tools.math.stat.bc_a - ------------------------------------------------------------------------------
%       tools.math.stat.bin2dFun - 2-D binning and apply functions to bins
%  tools.math.stat.bootstrap_std - --------------------------------------------------------------------------
%    tools.math.stat.cel_coo_rnd - ------------------------------------------------------------------------------
%      tools.math.stat.cell_stat - ----------------------------------------------------------------------------
%   tools.math.stat.centermass2d - ------------------------------------------------------------------------------
% tools.math.stat.confint_probdist - ------------------------------------------------------------------------------
%        tools.math.stat.corrsim - Correlation between two vectors and confidence region using bootstrap
%    tools.math.stat.corrsim_cov - Correlation matrix between N columns and bootstrap estimation of errors.
%         tools.math.stat.err_cl - Numerical estimate of percentiles.
% tools.math.stat.error2ensemble - --------------------------------------------------------------------------
%     tools.math.stat.fab_counts - -------------------------------------------------------------------------
%         tools.math.stat.hist2d - calculate the 2-D histogram of 2-D data set.
%        tools.math.stat.iqrFast - A fast iqr (inter quantile range) function (without interpolation)
%      tools.math.stat.jackknife - Given an estimator, calculate the Jacknife StD.
%       tools.math.stat.lognlogs - ---------------------------------------------------------------------------
% tools.math.stat.max_likelihood - Likelihood from observations and numerical probability distribution.
%          tools.math.stat.maxnd - ------------------------------------------------------------------------------
%     tools.math.stat.mean_error - Calculate the error on the mean using std/sqrt(N).
%         tools.math.stat.meannd - ------------------------------------------------------------------------------
%       tools.math.stat.mediannd - ------------------------------------------------------------------------------
%          tools.math.stat.minnd - ------------------------------------------------------------------------------
%       tools.math.stat.mode_bin - --------------------------------------------------------------------------
%   tools.math.stat.mode_density - Calculate the mode by estimating the density of points
%       tools.math.stat.mode_fit - Estimate the mode of an array by fitting a Gaussian to its histogram.
%       tools.math.stat.mode_vec - Mode and variance of a distribution
%      tools.math.stat.moment_2d - ------------------------------------------------------------------------------
%    tools.math.stat.mutual_info - Calculate the mutual information of two vectors (degree of independency)
%        tools.math.stat.nanmean - faster version of nanmean using the 'omitnan' option.
%      tools.math.stat.nanmedian - faster version of nanmedian using the 'omitnan' option.
%        tools.math.stat.nanrstd - Robust nanstd.
%         tools.math.stat.nanstd - faster version of nanstd using the 'omitnan' option.
%         tools.math.stat.noiser - --------------------------------------------------------------------------
%      tools.math.stat.poissconf - Upper/lower confidence intervals on N events assuming Poisson statistics
%  tools.math.stat.prob2find_inr - ------------------------------------------------------------------------------
%         tools.math.stat.psigma - --------------------------------------------------------------------------
%   tools.math.stat.quantileFast - A fast quantile function (without interpolation)
%    tools.math.stat.rand_circle - ------------------------------------------------------------------------------
%        tools.math.stat.rand_ps - Generate a random time series with a given power spectrum.
%     tools.math.stat.rand_range - --------------------------------------------------------------------------
%        tools.math.stat.randgen - Random numbers generator for arbitrary  distribution.
%  tools.math.stat.randinpolygon - Generate random positions inside a polygon
%        tools.math.stat.rangend - ------------------------------------------------------------------------------
%       tools.math.stat.realhist - Calculate histogram for a dataset in a given range.
%          tools.math.stat.rmean - Calculate the rubust mean over one of the dimensions.
%           tools.math.stat.rstd - Robust std calculated from the 50  inner percentile of the data.
%    tools.math.stat.sphere_conv - --------------------------------------------------------------------------
%    tools.math.stat.stat_in_htm - SHORT DESCRIPTION HERE
%          tools.math.stat.std_w - --------------------------------------------------------------------------
%          tools.math.stat.stdnd - Return the global StD of a N-D matrix.
%          tools.math.stat.sumnd - ------------------------------------------------------------------------------
%       tools.math.stat.unitTest - Package Unit-Test
%          tools.math.stat.wmean - --------------------------------------------------------------------------
%        tools.math.stat.wmedian - Weighted median for a vector.
%     tools.math.stat.wmedian_im - --------------------------------------------------------------------------
% tools.math.symbolic.allFunList - Functions and Classes list for the tools.math.symbolic package
% tools.math.symbolic.symbolic_poly - Build a symbolic polynomial
%   tools.math.symbolic.symerror - Calculate symbolic errors
% tools.math.symbolic.symerror_calc - Calculate and evaluate symbolic errors
% tools.math.symbolic.sympoly2d_2orders - Convert a 2D symbolic polynomials into vectors of orders and coef.
%   tools.math.symbolic.unitTest - Package Unit-Test
 help tools.math.allFunList