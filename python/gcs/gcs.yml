# GCS Interface Configuration File

# Notes:
#

#============================================================================
#
#============================================================================

Interface:

    # Message folders - Windows
    InMsgFolderWin: c:/gcs/inmsg/
    OutMsgFolderWin: c:/gcs/outmsg/
    
    # Message folders - Linux    
    InMsgFolder: c:/gcs/inmsg/
    OutMsgFolder: c:/gcs/outmsg/

    
    InImageFolder: c:/gcs/inimage/

    InMsgProcessedFolder: c:/gcs/inmsg_processed/

    List1: [Item1, Item2, Item3]

    Dict1: { thing1: huey, thing2: louie, thing3: dewey, thing3: again }

    NonUniqueKeys:
        - key: 1
        - key: 2
        - key: 3
        - SameKey: Same1
        - SameKey: Same2
        - SameKey: Same3

    Header1:
        - Key1: Value1
        - Key2: Value2
        - NonUnique: NonUniqueValue1
        - NonUnique: NonUniqueValue2
        - NonUnique: NonUniqueValue3

    Header2:
        KeyValueComment:

            MyKey1: MyValue1



KeepAlive:
    Interval: 60
    Timeout: 120
    
    
Params:                             # 1Ã—3 cell array


    - name: 'args.copycss'
      value: 'yes'
      comment: Comment1

    - name: 'args.css'
      value: 'dita-ot-doc.css'
      comment: Comment2

    - name: 'args.csspath'
      value: 'css'
      comment: Comment3

#============================================================================
#
#============================================================================

Simulator:

    Logical:
        # Logical values can be true/false/yes/no, converted to 0 or 1
        # true/false and yes/no are already supported, they are converted to 1 or 0, no need to convert
        true1       : true
        true2       : True
        true3       : yes
        false1      : false
        false2      : False
        false3      : no


    Func:
        # Function handles MUST BE STRINGS, they will be converted by Configuration.convert...
        func1       : '@num2str'
        func2       : '@str2num'
        un_func     : '@no_such_function'


    Eval:
        # Eval can be with quotes or without
        eval1       : 'eval("mod(10, 3)")'
        eval2       : eval("mod(11, 3)")
        eval3       : eval("Tran2D('poly3')")
        eval4       : eval("sin(1)")


    Cell:
        # These values are loaded as cell-array
        items       : [ 1, 2, 3, 4, 5 ]
        items2      : [ true, false, false, true ]
        names       : [ "one", "two", "three", "four" ]
        names2      : [ 'one', 'two' ]


#============================================================================
#                               GUI Interface
#============================================================================

# Windows
GuiWin:

    InMsgFolder: c:\gcs\gui_inmsg\
    OutMsgFolder: c:\gcs\gui_outmsg\
    EndOfSection: $


# Linux
GuiLinux:

    InMsgFolder: /tmp/gcs/gui_inmsg
    OutMsgFolder: /tmp/gcs/gui_outmsg
    EndOfSection: $

